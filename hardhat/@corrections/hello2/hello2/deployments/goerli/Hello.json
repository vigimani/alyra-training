{
  "address": "0xa074c149d4e71d8a65369925ACFa1488C5Bc0f19",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_firstname",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getFirstname",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sayHello",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_firstname",
          "type": "string"
        }
      ],
      "name": "setFirstname",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6bab43455aa67f4aee9d5fd6b81a9b2db852d51ca8ef34beb43ea8d0978ed95c",
  "receipt": {
    "to": null,
    "from": "0xc4A8d6D60337998B1435503f853C39Af52c3bB2C",
    "contractAddress": "0xa074c149d4e71d8a65369925ACFa1488C5Bc0f19",
    "transactionIndex": 58,
    "gasUsed": "813147",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000020000000000000040000000c00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000400000000000000000000000000000000000000",
    "blockHash": "0x730a324757c37525713bf6721c061184a33e674ec901e99e60a3e412c42fb2f1",
    "transactionHash": "0x6bab43455aa67f4aee9d5fd6b81a9b2db852d51ca8ef34beb43ea8d0978ed95c",
    "logs": [
      {
        "transactionIndex": 58,
        "blockNumber": 8133243,
        "transactionHash": "0x6bab43455aa67f4aee9d5fd6b81a9b2db852d51ca8ef34beb43ea8d0978ed95c",
        "address": "0xa074c149d4e71d8a65369925ACFa1488C5Bc0f19",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c4a8d6d60337998b1435503f853c39af52c3bb2c"
        ],
        "data": "0x",
        "logIndex": 112,
        "blockHash": "0x730a324757c37525713bf6721c061184a33e674ec901e99e60a3e412c42fb2f1"
      }
    ],
    "blockNumber": 8133243,
    "cumulativeGasUsed": "9492563",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "bang"
  ],
  "numDeployments": 1,
  "solcInputHash": "f0396e3938e6f550c44a5f71d877d916",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_firstname\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getFirstname\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sayHello\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_firstname\",\"type\":\"string\"}],\"name\":\"setFirstname\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hello.sol\":\"Hello\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Hello.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Hello is Ownable {\\n    string firstname;\\n\\n    constructor(string memory _firstname) {\\n        firstname = _firstname;\\n    }\\n\\n    function sayHello() external view returns (string memory) {\\n        return concatenate(\\\"Hello\\\", firstname);\\n    }\\n\\n    function getFirstname() external view returns (string memory) {\\n        return firstname;\\n    }\\n\\n    function setFirstname(string memory _firstname) external onlyOwner {\\n        firstname = _firstname;\\n    }\\n\\n    function concatenate(string memory a, string memory b)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        return string(abi.encodePacked(a, \\\" \\\", b));\\n    }\\n}\\n\",\"keccak256\":\"0xdff4b9740b92dc5cc05c8ac1eebabc0df10d6a1b6a12c3e83499183781a97c5c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012e4380380620012e48339818101604052810190620000379190620002cf565b620000576200004b6200007060201b60201c565b6200007860201b60201c565b80600190816200006891906200056b565b505062000652565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a5826200015a565b810181811067ffffffffffffffff82111715620001c757620001c66200016b565b5b80604052505050565b6000620001dc6200013c565b9050620001ea82826200019a565b919050565b600067ffffffffffffffff8211156200020d576200020c6200016b565b5b62000218826200015a565b9050602081019050919050565b60005b838110156200024557808201518184015260208101905062000228565b60008484015250505050565b6000620002686200026284620001ef565b620001d0565b90508281526020810184848401111562000287576200028662000155565b5b6200029484828562000225565b509392505050565b600082601f830112620002b457620002b362000150565b5b8151620002c684826020860162000251565b91505092915050565b600060208284031215620002e857620002e762000146565b5b600082015167ffffffffffffffff8111156200030957620003086200014b565b5b62000317848285016200029c565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037357607f821691505b6020821081036200038957620003886200032b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003f37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003b4565b620003ff8683620003b4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200044c62000446620004408462000417565b62000421565b62000417565b9050919050565b6000819050919050565b62000468836200042b565b62000480620004778262000453565b848454620003c1565b825550505050565b600090565b6200049762000488565b620004a48184846200045d565b505050565b5b81811015620004cc57620004c06000826200048d565b600181019050620004aa565b5050565b601f8211156200051b57620004e5816200038f565b620004f084620003a4565b8101602085101562000500578190505b620005186200050f85620003a4565b830182620004a9565b50505b505050565b600082821c905092915050565b6000620005406000198460080262000520565b1980831691505092915050565b60006200055b83836200052d565b9150826002028217905092915050565b620005768262000320565b67ffffffffffffffff8111156200059257620005916200016b565b5b6200059e82546200035a565b620005ab828285620004d0565b600060209050601f831160018114620005e35760008415620005ce578287015190505b620005da85826200054d565b8655506200064a565b601f198416620005f3866200038f565b60005b828110156200061d57848901518255600182019150602085019450602081019050620005f6565b868310156200063d578489015162000639601f8916826200052d565b8355505b6001600288020188555050505b505050505050565b610c8280620006626000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063ba681d0d1461008f578063d32ac670146100ab578063ef5fb05b146100c9578063f2fde38b146100e7575b600080fd5b61006f610103565b005b610079610117565b60405161008691906104f7565b60405180910390f35b6100a960048036038101906100a4919061066c565b610140565b005b6100b361015b565b6040516100c09190610734565b60405180910390f35b6100d16101ed565b6040516100de9190610734565b60405180910390f35b61010160048036038101906100fc9190610782565b6102bd565b005b61010b610340565b61011560006103be565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610148610340565b806001908161015791906109c5565b5050565b60606001805461016a906107de565b80601f0160208091040260200160405190810160405280929190818152602001828054610196906107de565b80156101e35780601f106101b8576101008083540402835291602001916101e3565b820191906000526020600020905b8154815290600101906020018083116101c657829003601f168201915b5050505050905090565b60606102b86040518060400160405280600581526020017f48656c6c6f00000000000000000000000000000000000000000000000000000081525060018054610235906107de565b80601f0160208091040260200160405190810160405280929190818152602001828054610261906107de565b80156102ae5780601f10610283576101008083540402835291602001916102ae565b820191906000526020600020905b81548152906001019060200180831161029157829003601f168201915b5050505050610482565b905090565b6102c5610340565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b90610b09565b60405180910390fd5b61033d816103be565b50565b6103486104ae565b73ffffffffffffffffffffffffffffffffffffffff16610366610117565b73ffffffffffffffffffffffffffffffffffffffff16146103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390610b75565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60608282604051602001610497929190610c1d565b604051602081830303815290604052905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e1826104b6565b9050919050565b6104f1816104d6565b82525050565b600060208201905061050c60008301846104e8565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61057982610530565b810181811067ffffffffffffffff8211171561059857610597610541565b5b80604052505050565b60006105ab610512565b90506105b78282610570565b919050565b600067ffffffffffffffff8211156105d7576105d6610541565b5b6105e082610530565b9050602081019050919050565b82818337600083830152505050565b600061060f61060a846105bc565b6105a1565b90508281526020810184848401111561062b5761062a61052b565b5b6106368482856105ed565b509392505050565b600082601f83011261065357610652610526565b5b81356106638482602086016105fc565b91505092915050565b6000602082840312156106825761068161051c565b5b600082013567ffffffffffffffff8111156106a05761069f610521565b5b6106ac8482850161063e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106ef5780820151818401526020810190506106d4565b60008484015250505050565b6000610706826106b5565b61071081856106c0565b93506107208185602086016106d1565b61072981610530565b840191505092915050565b6000602082019050818103600083015261074e81846106fb565b905092915050565b61075f816104d6565b811461076a57600080fd5b50565b60008135905061077c81610756565b92915050565b6000602082840312156107985761079761051c565b5b60006107a68482850161076d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107f657607f821691505b602082108103610809576108086107af565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610834565b61087b8683610834565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006108c26108bd6108b884610893565b61089d565b610893565b9050919050565b6000819050919050565b6108dc836108a7565b6108f06108e8826108c9565b848454610841565b825550505050565b600090565b6109056108f8565b6109108184846108d3565b505050565b5b81811015610934576109296000826108fd565b600181019050610916565b5050565b601f8211156109795761094a8161080f565b61095384610824565b81016020851015610962578190505b61097661096e85610824565b830182610915565b50505b505050565b600082821c905092915050565b600061099c6000198460080261097e565b1980831691505092915050565b60006109b5838361098b565b9150826002028217905092915050565b6109ce826106b5565b67ffffffffffffffff8111156109e7576109e6610541565b5b6109f182546107de565b6109fc828285610938565b600060209050601f831160018114610a2f5760008415610a1d578287015190505b610a2785826109a9565b865550610a8f565b601f198416610a3d8661080f565b60005b82811015610a6557848901518255600182019150602085019450602081019050610a40565b86831015610a825784890151610a7e601f89168261098b565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610af36026836106c0565b9150610afe82610a97565b604082019050919050565b60006020820190508181036000830152610b2281610ae6565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b5f6020836106c0565b9150610b6a82610b29565b602082019050919050565b60006020820190508181036000830152610b8e81610b52565b9050919050565b600081905092915050565b6000610bab826106b5565b610bb58185610b95565b9350610bc58185602086016106d1565b80840191505092915050565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610c07600183610b95565b9150610c1282610bd1565b600182019050919050565b6000610c298285610ba0565b9150610c3482610bfa565b9150610c408284610ba0565b9150819050939250505056fea26469706673582212209bcd7404d01ec13db9204c9a01e89dde33fd9766c2de37a9d154f9af5e90aea664736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063ba681d0d1461008f578063d32ac670146100ab578063ef5fb05b146100c9578063f2fde38b146100e7575b600080fd5b61006f610103565b005b610079610117565b60405161008691906104f7565b60405180910390f35b6100a960048036038101906100a4919061066c565b610140565b005b6100b361015b565b6040516100c09190610734565b60405180910390f35b6100d16101ed565b6040516100de9190610734565b60405180910390f35b61010160048036038101906100fc9190610782565b6102bd565b005b61010b610340565b61011560006103be565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610148610340565b806001908161015791906109c5565b5050565b60606001805461016a906107de565b80601f0160208091040260200160405190810160405280929190818152602001828054610196906107de565b80156101e35780601f106101b8576101008083540402835291602001916101e3565b820191906000526020600020905b8154815290600101906020018083116101c657829003601f168201915b5050505050905090565b60606102b86040518060400160405280600581526020017f48656c6c6f00000000000000000000000000000000000000000000000000000081525060018054610235906107de565b80601f0160208091040260200160405190810160405280929190818152602001828054610261906107de565b80156102ae5780601f10610283576101008083540402835291602001916102ae565b820191906000526020600020905b81548152906001019060200180831161029157829003601f168201915b5050505050610482565b905090565b6102c5610340565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b90610b09565b60405180910390fd5b61033d816103be565b50565b6103486104ae565b73ffffffffffffffffffffffffffffffffffffffff16610366610117565b73ffffffffffffffffffffffffffffffffffffffff16146103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390610b75565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60608282604051602001610497929190610c1d565b604051602081830303815290604052905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e1826104b6565b9050919050565b6104f1816104d6565b82525050565b600060208201905061050c60008301846104e8565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61057982610530565b810181811067ffffffffffffffff8211171561059857610597610541565b5b80604052505050565b60006105ab610512565b90506105b78282610570565b919050565b600067ffffffffffffffff8211156105d7576105d6610541565b5b6105e082610530565b9050602081019050919050565b82818337600083830152505050565b600061060f61060a846105bc565b6105a1565b90508281526020810184848401111561062b5761062a61052b565b5b6106368482856105ed565b509392505050565b600082601f83011261065357610652610526565b5b81356106638482602086016105fc565b91505092915050565b6000602082840312156106825761068161051c565b5b600082013567ffffffffffffffff8111156106a05761069f610521565b5b6106ac8482850161063e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106ef5780820151818401526020810190506106d4565b60008484015250505050565b6000610706826106b5565b61071081856106c0565b93506107208185602086016106d1565b61072981610530565b840191505092915050565b6000602082019050818103600083015261074e81846106fb565b905092915050565b61075f816104d6565b811461076a57600080fd5b50565b60008135905061077c81610756565b92915050565b6000602082840312156107985761079761051c565b5b60006107a68482850161076d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107f657607f821691505b602082108103610809576108086107af565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610834565b61087b8683610834565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006108c26108bd6108b884610893565b61089d565b610893565b9050919050565b6000819050919050565b6108dc836108a7565b6108f06108e8826108c9565b848454610841565b825550505050565b600090565b6109056108f8565b6109108184846108d3565b505050565b5b81811015610934576109296000826108fd565b600181019050610916565b5050565b601f8211156109795761094a8161080f565b61095384610824565b81016020851015610962578190505b61097661096e85610824565b830182610915565b50505b505050565b600082821c905092915050565b600061099c6000198460080261097e565b1980831691505092915050565b60006109b5838361098b565b9150826002028217905092915050565b6109ce826106b5565b67ffffffffffffffff8111156109e7576109e6610541565b5b6109f182546107de565b6109fc828285610938565b600060209050601f831160018114610a2f5760008415610a1d578287015190505b610a2785826109a9565b865550610a8f565b601f198416610a3d8661080f565b60005b82811015610a6557848901518255600182019150602085019450602081019050610a40565b86831015610a825784890151610a7e601f89168261098b565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610af36026836106c0565b9150610afe82610a97565b604082019050919050565b60006020820190508181036000830152610b2281610ae6565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b5f6020836106c0565b9150610b6a82610b29565b602082019050919050565b60006020820190508181036000830152610b8e81610b52565b9050919050565b600081905092915050565b6000610bab826106b5565b610bb58185610b95565b9350610bc58185602086016106d1565b80840191505092915050565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610c07600183610b95565b9150610c1282610bd1565b600182019050919050565b6000610c298285610ba0565b9150610c3482610bfa565b9150610c408284610ba0565b9150819050939250505056fea26469706673582212209bcd7404d01ec13db9204c9a01e89dde33fd9766c2de37a9d154f9af5e90aea664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Hello.sol:Hello",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/Hello.sol:Hello",
        "label": "firstname",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}